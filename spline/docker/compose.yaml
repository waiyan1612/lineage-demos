#  Copyright 2019 ABSA Group Limited
#
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
---
name: 'spline-demo'
services:
  arangodb:
    image: arangodb:${ARANGO_DB_VERSION}
    restart: on-failure
    #entrypoint: arangod --database.auto-upgrade
    ports:
      - ${ARANGO_DB_PORT}:8529
    environment:
      ARANGO_NO_AUTH: 1

  rest-server:
    image: ${SPLINE_SERVER_DOCKER_REPO_URL:-absaoss}/spline-rest-server:${SPLINE_SERVER_VERSION}
    restart: on-failure
    ports:
      - ${SPLINE_REST_PORT}:8080
    environment:
      SPLINE_DATABASE_CONNECTION_URL: 'arangodb://arangodb/spline'
      # by default /dev/random is used which may block
      CATALINA_OPTS: "-Dsecurerandom.source=file:/dev/./urandom -Djava.security.egd=file:/dev/./urandom"
    depends_on:
      db-init:
        condition: service_completed_successfully

  db-init:
    image: ${SPLINE_SERVER_DOCKER_REPO_URL:-absaoss}/spline-admin:${SPLINE_SERVER_VERSION}
    restart: on-failure
    entrypoint: >
      tini -g -- bash -c "
        until curl --output /dev/null --silent --get --fail http://arangodb:8529/_admin/server/availability
        do
          echo waiting for ArangoDB server to be ready...
          sleep 5
        done
        exec bash ./entrypoint.sh db-init arangodb://arangodb/spline -s
      "
    depends_on:
      - arangodb

  ui:
    image: ${SPLINE_UI_DOCKER_REPO_URL:-absaoss}/spline-web-ui:${SPLINE_UI_VERSION}
    restart: on-failure
    environment:
      # The consumer URL is used by the web browser
      SPLINE_CONSUMER_URL: 'http://${DOCKER_HOST_EXTERNAL:-localhost}:${SPLINE_REST_PORT}/consumer'
      # by default /dev/random is used which may block
      CATALINA_OPTS: "-Dsecurerandom.source=file:/dev/./urandom -Djava.security.egd=file:/dev/./urandom"
    ports:
      - ${SPLINE_UI_PORT}:8080
    depends_on:
      - rest-server

  jupyter:
    image: quay.io/jupyter/pyspark-notebook:spark-3.5.2
    user: "${UID}:0"  # Required to write notebook or data back to host volume
    group_add:
      - users
    environment:
      DOCKER_STACKS_JUPYTER_CMD: "lab"
      NOTEBOOK_ARGS: "--IdentityProvider.token='easy'"
    ports: 
      - ${JUPYTER_PORT}:8888
    volumes:
      - "$HOST_NOTEBOOK_DIR:/home/jovyan/notebooks"
      - "$HOST_DATA_DIR:/home/jovyan/data"
      - "$HOST_OUT_DIR:/home/jovyan/output"
